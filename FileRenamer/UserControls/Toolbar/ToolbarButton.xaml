<Button
	x:Class="FileRenamer.UserControls.Toolbar.ToolbarButton"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:m="using:FileRenamer.Models"
	mc:Ignorable="d"
	d:DataContext="{d:DesignInstance Type=m:ExtendedUICommand}"
	MinWidth="40"
	Margin="2"
	Background="Transparent"
	BackgroundSizing="InnerBorderEdge"
	Foreground="{ThemeResource ButtonForeground}"
	BorderBrush="Transparent"
	BorderThickness="{ThemeResource ButtonBorderThemeThickness}"
	CornerRadius="{ThemeResource ControlCornerRadius}"
	Padding="4 4 8 4"
	HorizontalAlignment="Left"
	VerticalAlignment="Center"
	HorizontalContentAlignment="Stretch"
	VerticalContentAlignment="Center"
	FontFamily="{ThemeResource ContentControlThemeFontFamily}"
	FontWeight="Normal"
	FontSize="11"
	UseSystemFocusVisuals="{StaticResource UseSystemFocusVisuals}"
	FocusVisualMargin="-3"
	DataContext="{x:Bind Command}"
	Command="{x:Bind Command}" >

	<Button.Template>

		<ControlTemplate TargetType="Button" >
			<ContentPresenter x:Name="ContentPresenter" xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
							  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
							  Background="{TemplateBinding Background}" BackgroundSizing="{TemplateBinding BackgroundSizing}"
							  BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
							  CornerRadius="{TemplateBinding CornerRadius}" Padding="{TemplateBinding Padding}" 
							  ContentTransitions="{TemplateBinding ContentTransitions}"
							  AutomationProperties.AccessibilityView="Raw" muxc:AnimatedIcon.State="Normal" DataContext="{Binding}">

				<ContentPresenter.BackgroundTransition>
					<BrushTransition Duration="0:0:0.083" />
				</ContentPresenter.BackgroundTransition>

				<ContentPresenter.Content>
					<StackPanel Orientation="Horizontal" HorizontalAlignment="Left" >
						<Viewbox Margin="{StaticResource XSmallRightMargin}" Width="{StaticResource MediumToolbarIconSize}" Height="{StaticResource MediumToolbarIconSize}" >
							<IconSourceElement IconSource="{Binding IconSource, Mode=OneWay}" />
						</Viewbox>
						<TextBlock VerticalAlignment="Center" Text="{Binding Label, Mode=OneWay}" />
					</StackPanel>
				</ContentPresenter.Content>

				<VisualStateManager.VisualStateGroups>
					<VisualStateGroup x:Name="CommonStates">

						<VisualState x:Name="Normal" />

						<VisualState x:Name="PointerOver">
							<Storyboard>
								<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
									<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBackgroundPointerOver}" />
								</ObjectAnimationUsingKeyFrames>
								<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
									<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBorderBrushPointerOver}" />
								</ObjectAnimationUsingKeyFrames>
								<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
									<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonForegroundPointerOver}" />
								</ObjectAnimationUsingKeyFrames>
							</Storyboard>
							<!--
							<VisualState.Setters>
								<Setter Target="ContentPresenter.(controls:AnimatedIcon.State)" Value="PointerOver" />
							</VisualState.Setters>
							-->
						</VisualState>

						<VisualState x:Name="Pressed">
							<Storyboard>
								<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
									<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBackgroundPressed}" />
								</ObjectAnimationUsingKeyFrames>
								<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
									<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBorderBrushPressed}" />
								</ObjectAnimationUsingKeyFrames>
								<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
									<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonForegroundPressed}" />
								</ObjectAnimationUsingKeyFrames>
							</Storyboard>
							<!--
							<VisualState.Setters>
								<Setter Target="ContentPresenter.(controls:AnimatedIcon.State)" Value="Pressed" />
							</VisualState.Setters>
							-->
						</VisualState>

						<VisualState x:Name="Disabled">
							<Storyboard>
								<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
									<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBackgroundDisabled}" />
								</ObjectAnimationUsingKeyFrames>
								<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
									<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBorderBrushDisabled}" />
								</ObjectAnimationUsingKeyFrames>
								<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
									<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonForegroundDisabled}" />
								</ObjectAnimationUsingKeyFrames>
							</Storyboard>
							<!--
							<VisualState.Setters>
								<Setter Target="ContentPresenter.(controls:AnimatedIcon.State)" Value="Normal" />
							</VisualState.Setters>
							-->
						</VisualState>

					</VisualStateGroup>
				</VisualStateManager.VisualStateGroups>

			</ContentPresenter>
		</ControlTemplate>

	</Button.Template>
</Button>